/*-- -------------------------- -->
<---        Content Page        -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
  @keyframes floatAnimation {
    0% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-2rem);
    }
    100% {
      transform: translateY(0);
    }
  }

  @keyframes floatAnimation2 {
    0% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-3rem);
    }
    100% {
      transform: translateY(0);
    }
  }

  #content-page-1399 {
    padding: var(--sectionPadding);
    background-color: #fff;
    /* clips the wave background from causing overflow issues when it goes off screen */
    overflow: hidden;
    position: relative;
    z-index: 1;

    .cs-container {
      width: 100%;
      max-width: calc(1280 / 16 * 1rem);
      margin: auto;
      display: flex;
      flex-direction: column;
      align-items: center;
      /* 40px - 64px */
      gap: clamp(2.5rem, 4vw, 4rem);
      position: relative;
    }

    .cs-content {
      /* set text align to left if content needs to be left aligned */
      text-align: left;
      width: 100%;
      max-width: calc(738 / 16 * 1rem);
      display: flex;
      flex-direction: column;
      /* centers content horizontally, set to flex-start to left align */
      align-items: flex-start;
    }
    h2,
    h3,
    h4,
    h5,
    h6 {
      font-weight: 700;
      text-align: inherit;
      margin: 0 0 calc(16 / 16 * 1rem) 0;
      color: var(--headerColor);
    }

    h2 {
      font-size: calc(32 / 16 * 1rem);
      margin-top: calc(32 / 16 * 1rem);
    }

    h3 {
      font-size: calc(24 / 16 * 1rem);
      color: var(--primary);
    }

    h4,
    h5,
    h6 {
      font-size: calc(20 / 16 * 1rem);
    }

    .cs-button-solid {
      margin-bottom: calc(32 / 16 * 1rem);
    }

    .cs-no-margin {
      margin: 0;
    }

    .cs-color {
      color: var(--primary);
    }

    p {
      font-size: var(--bodyFontSize);
      line-height: 1.5em;
      text-align: inherit;
      width: 100%;
      margin: 0 0 calc(16 / 16 * 1rem) 0;
      color: var(--bodyTextColor);
      &:last-of-type {
        margin-bottom: calc(32 / 16 * 1rem);
      }

      a {
        font-size: inherit;
        line-height: inherit;
        text-decoration: underline;
        color: var(--primary);
        filter: brightness(120%);
      }
    }

    ol,
    ul {
      padding-left: calc(24 / 16 * 1rem);
      margin: 0 0 calc(32 / 16 * 1rem) 0;
      color: var(--bodyTextColor);
      display: flex;
      flex-direction: column;
      gap: calc(16 / 16 * 1rem);
    }

    ul {
      li {
        list-style: none;
        color: inherit;
        position: relative;

        &:before {
          /* custom list bullet */
          content: "";
          width: 3px;
          height: 3px;
          background: currentColor;
          opacity: 1;
          border-radius: var(--borderRadius);
          position: absolute;
          display: block;
          top: calc(10 / 16 * 1rem);
          left: calc(-12 / 16 * 1rem);
        }
      }
    }

    img {
      width: 100%;
      height: auto;
      display: block;
    }

    .cs-image-group {
      width: 100%;
      display: none;
      flex-direction: column;
      /* 16px - 20px */
      gap: clamp(1rem, 2.6vw, 1.25rem);
      position: relative;
    }

    .cs-flex {
      position: relative;
    }

    .cs-background {
      width: 100%;
      height: 100%;
      /* 32px - 48px */
      border-radius: var(--borderRadius);
      /* clips the corners of the children around the border radius */
      overflow: hidden;
      /* makes it cover the parent dimensions */
      object-fit: cover;
      display: block;

      img {
        width: 100%;
        height: 100%;
        /* makes it cover the parent like a backgorund image */
        object-fit: cover;
        display: block;
      }
    }

    .cs-box {
      text-align: left;
      width: 100%;
      max-width: calc(200 / 16 * 1rem);
      padding: calc(32 / 16 * 1rem);
      /* prevents padding from affecting height and width */
      box-sizing: border-box;
      background-color: var(--primary);
      /* 48px - 80px */
      border-radius: var(--borderRadius);
      display: none;
      flex-direction: column;
      align-items: flex-start;
      gap: calc(24 / 16 * 1rem);
      position: absolute;
      /* 12px - 20px */
      right: clamp(0.75rem, 1.9vw, 1.5rem);
      /* 12px - 20px */
      bottom: clamp(0.75rem, 1.9vw, 1.5rem);
    }

    .cs-box-icon {
      width: calc(60 / 16 * 1rem);
      height: auto;
      display: block;
    }

    .cs-desc {
      font-size: calc(20 / 16 * 1rem);
      line-height: 1.2em;
      text-align: inherit;
      font-weight: 700;
      width: 100%;
      margin: 0;
      color: var(--bodyTextColorWhite);
    }

    .cs-card-group {
      width: 100%;
      max-width: calc(630 / 16 * 1rem);
      margin: 0 0 calc(24 / 16 * 1rem) 0;
      padding: 0;
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(15.265rem, 1fr));
      align-items: center;
      gap: clamp(1rem, 2vw, 1.25rem);
    }

    .cs-item {
      list-style: none;
      /* 16px - 24px */
      padding: clamp(1rem, 3vw, 1.5rem);
      /* prevents padding from affecting height and width */
      box-sizing: border-box;
      background-color: #f7f7f7;
      border-radius: var(--borderRadius);
      border: 1px solid #e8e8e8;
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      gap: calc(12 / 16 * 1rem);

      &:before {
        display: none;
      }
    }

    .cs-h3 {
      font-size: calc(20 / 16 * 1rem);
      line-height: 1.2em;
      font-weight: 700;
      margin: 0;
      color: var(--headerColor);
      display: flex;
      justify-content: flex-start;
      align-items: center;
      gap: calc(8 / 16 * 1rem);
    }

    .cs-h3-icon {
      width: calc(32 / 16 * 1rem);
      height: auto;
      display: block;
    }

    .cs-item-text {
      font-size: calc(14 / 16 * 1rem);
      line-height: 1.5em;
      margin: 0;
      color: var(--bodyTextColor);

      &:last-of-type {
        margin: 0;
      }
    }

    .cs-ul {
      width: 100%;
      margin: 0 0 calc(24 / 16 * 1rem) 0;
      padding: 0;
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      gap: calc(12 / 16 * 1rem);
    }

    .cs-li {
      font-size: var(--bodyFontSize);
      list-style: none;
      line-height: 1.5em;
      width: 100%;
      color: var(--bodyTextColor);
      display: flex;
      justify-content: flex-start;
      /* push icon top the top so if the list item goes to two lines the icon stays at the top */
      align-items: flex-start;
      gap: calc(8 / 16 * 1rem);
    }

    .cs-icon {
      width: calc(24 / 16 * 1rem);
      height: auto;
      /* adds extra space between the icon and top of parent so it's more centered */
      margin-top: 1px;
      display: block;
    }

    .cs-bubbles {
      font-size: min(2.5vw, 0.7em);
      width: calc(582 / 16 * 1em);
      height: calc(557 / 16 * 1em);
      display: none;
      position: absolute;
      /* changes to auto at larger desktop */
      right: calc(-260 / 16 * 1em);
      /* changes to -220px at large desktop */
      bottom: calc(-50 / 16 * 1em);
      z-index: -1;

      &:before {
        /* white border bubble */
        content: "";
        width: calc(464 / 16 * 1em);
        height: calc(464 / 16 * 1em);
        background: transparent;
        border: 1px solid #1a1a1a;
        border-radius: 50%;
        opacity: 1;
        position: absolute;
        display: block;
        top: 0;
        right: 0;
        animation-name: floatAnimation;
        animation-duration: 5s;
        animation-timing-function: ease-in-out;
        animation-fill-mode: forwards;
        animation-iteration-count: infinite;
      }

      &:after {
        /* orange bubble */
        content: "";
        width: calc(366 / 16 * 1em);
        height: calc(366 / 16 * 1em);
        background: var(--primary);
        opacity: 0.15;
        border-radius: 50%;
        display: block;
        position: absolute;
        bottom: 0;
        left: 0;
        z-index: -1;
        animation-name: floatAnimation2;
        animation-duration: 14s;
        animation-timing-function: ease-in-out;
        animation-fill-mode: forwards;
        animation-iteration-count: infinite;
      }
    }
  }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
  #content-page-1399 {
    .cs-container {
      flex-direction: row;
      align-items: flex-start;
      justify-content: space-between;
    }

    .cs-content {
      width: 50%;
      max-width: calc(647 / 16 * 1rem);
      /* prevents flexbox from squishing it */
      flex: none;
    }

    .cs-image-group {
      width: 44%;
      max-width: calc(542 / 16 * 1rem);
      display: flex;
      /* sends it to the right in the 2nd position */
      order: 2;
    }
  }
}

/* Desktop - 1200px */
@media only screen and (min-width: 75rem) {
  #content-page-1399 {
    .cs-content {
      width: 53%;
    }

    .cs-image-group {
      width: 43%;
    }

    .cs-box {
      display: flex;
    }

    .cs-bubbles {
      font-size: 1em;
      margin-left: calc(600 / 16 * 1rem);
      display: block;
      right: auto;
      left: 50%;
      bottom: calc(-220 / 16 * 1rem);
    }
  }
}

/*-- -------------------------- -->
<---       Side By Side         -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
  #RPsbs-2050,
  #RPsbsr-2050 {
    padding: var(--sectionPadding);
    background-color: #f3fcfb;
    overflow: hidden;
    position: relative;

    .cs-container {
      width: 100%;
      /* changed to 1280px at desktop */
      max-width: calc(550 / 16 * 1rem);
      margin: auto;
      display: flex;
      flex-direction: column;
      align-items: center;
      /* 48px - 64px */
      gap: clamp(3rem, 6vw, 4rem);
      position: relative;
    }

    .cs-content {
      /* set text align to center if content needs to be centrally aligned */
      text-align: left;
      width: 100%;
      max-width: calc(617 / 16 * 1rem);
      display: flex;
      flex-direction: column;
      /* aligns content to the left, set to center to centrally align */
      align-items: flex-start;
    }

    .cs-text {
      margin-bottom: calc(12 / 16 * 1rem);

      &:last-of-type {
        margin: 0;
      }
    }

    .cs-ul {
      width: 100%;
      margin: calc(24 / 16 * 1rem) 0 calc(32 / 16 * 1rem) 0;
      padding: 0;
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: calc(12 / 16 * 1rem);
    }

    .cs-li {
      /* 14px - 16px */
      font-size: clamp(0.875rem, 2vw, 1rem);
      line-height: 1.5em;
      list-style: none;
      width: 100%;
      color: var(--bodyTextColor);
      display: flex;
      justify-content: flex-start;
      align-items: center;
      gap: calc(8 / 16 * 1rem);
    }

    .cs-tick {
      width: calc(20 / 16 * 1rem);
      height: auto;
      /* adds extra space between the icon and top of parent so it's more centered */
      margin-top: 1px;
      display: block;
    }

    .cs-button-solid {
      font-size: calc(16 / 16 * 1rem);
      font-weight: 700;
      /* 46px - 56px */
      line-height: clamp(2.875rem, 5.5vw, 3.5rem);
      text-align: center;
      text-decoration: none;
      min-width: calc(150 / 16 * 1rem);
      margin: 0;
      /* prevents padding from adding to the width */
      box-sizing: border-box;
      padding: 0 calc(32 / 16 * 1rem);
      background-color: var(--primary);
      color: #fff;
      border-radius: var(--borderRadius);
      display: inline-block;
      position: relative;
      z-index: 1;

      &:before {
        content: "";
        width: 0%;
        height: 100%;
        background: #000;
        opacity: 1;
        border-radius: var(--borderRadius);
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1;
        transition: width 0.3s;
      }

      &:hover {
        &:before {
          width: 100%;
        }
      }
    }

    .cs-ul-icons {
      width: 100%;
      max-width: calc(630 / 16 * 1rem);
      /* 48px - 64px */
      margin: clamp(3rem, 6vw, 4rem) 0 0;
      padding: 0;
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      gap: calc(32 / 16 * 1rem);
    }

    .cs-li-icons {
      list-style: none;
      margin: 0;
      padding: 0;
      padding-bottom: calc(32 / 16 * 1rem);
      border-bottom: 1px solid rgba(72, 72, 72, 0.4);
      display: flex;
      justify-content: flex-start;
      align-items: flex-start;
      gap: calc(20 / 16 * 1rem);

      &:last-of-type {
        padding: 0;
        border: none;
      }
    }

    .cs-icon {
      width: calc(48 / 16 * 1rem);
      height: auto;
      display: block;
    }

    .cs-h3 {
      /* 20px - 25px */
      font-size: clamp(1.25rem, 2.5vw, 1.5625rem);
      font-weight: 700;
      line-height: 1.2em;
      text-align: left;
      margin: 0 0 calc(16 / 16 * 1rem) 0;
      color: var(--bodyTextColorWhite);
    }

    .cs-li-text {
      /* 14px - 16px */
      font-size: calc(16 / 16 * 1rem);
      line-height: 1.5em;
      text-align: left;
      margin: 0;
      color: var(--bodyTextColorWhite);
      opacity: 0.8;
    }

    .cs-picture-group {
      width: 100%;
      min-height: calc(520 / 16 * 1rem);
      display: flex;
      position: relative;
      z-index: 1;

      /* because the img in cs-picture is absolutely positioned, it won't contribute to the height of the parent. therefore, a height: 100% won't work. instead, we have to set .cs-picture-group to a flexbox, and set flex to 1 to fill the container dynamically */
      .cs-picture {
        flex: 1;
      }
    }

    .cs-picture {
      width: 100%;
      min-height: calc(362 / 16 * 1rem);
      /* clips img tag corners */
      overflow: hidden;
      border-radius: var(--borderRadius);
      display: block;
      position: relative;
      z-index: 1;

      img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        display: block;
        position: absolute;
        top: 0;
        left: 0;
      }
    }

    .cs-box {
      text-align: left;
      width: 89%;
      max-width: calc(305 / 16 * 1rem);
      /* prevents padding from affecting height and width */
      box-sizing: border-box;
      padding: calc(32 / 16 * 1rem);
      background-color: #f2fbf8;
      border-radius: var(--borderRadius);
      position: absolute;
      /* 16px - 40px */
      bottom: clamp(1rem, 4vw, 2.5rem);
      /* 16px - 40px */
      left: clamp(1rem, 4vw, 2.5rem);
      z-index: 1;
    }

    .cs-box-icon {
      width: calc(60 / 16 * 1rem);
      height: auto;
      margin: 0 0 calc(16 / 16 * 1rem);
      display: block;
    }

    .cs-box-number {
      font-size: calc(31 / 16 * 1rem);
      font-weight: 900;
      line-height: 1.2em;
      margin: 0 0 calc(12 / 16 * 1rem);
      color: var(--headerColor);
      display: block;
    }

    .cs-box-desc {
      font-size: calc(16 / 16 * 1rem);
      line-height: 1.5em;
      color: var(--bodyTextColor);
      display: block;
    }
  }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
  #RPsbs-2050,
  #RPsbsr-2050 {
    .cs-container {
      max-width: calc(1280 / 16 * 1rem);
      flex-direction: row;
      align-items: stretch;
      justify-content: flex-end;
      position: relative;
      z-index: 1;
    }

    .cs-content {
      width: 48vw;
    }
  }
}

/* Small Desktop - 1024px */
@media only screen and (min-width: 64rem) {
  #RPsbs-2050,
  #RPsbsr-2050 {
    .cs-content {
      padding: calc(40 / 16 * 1rem) 0;
    }

    .cs-picture-group {
      width: 50%;
      height: auto;
    }
  }
}

/*-- -------------------------- -->
<---  FAQ- SEO content dropper  -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
  #faq {
    padding: var(--sectionPadding);
    position: relative;
    overflow: hidden;

    .cs-container {
      width: 100%;
      /* chnages to 1280px at desktop */
      max-width: calc(584 / 16 * 1rem);
      margin: auto;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      /* 40px - 48px */
      gap: clamp(2.5rem, 5vw, 3rem);
    }

    .cs-content {
      text-align: left;
      max-width: calc(630 / 16 * 1rem);
    }

    .cs-title {
      /* 20 characters wide including spaces */
      max-width: 20ch;
    }

    .cs-faq-group {
      padding: 0;
      margin: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      flex-direction: column;
      align-self: center;
    }

    .cs-faq-item {
      list-style: none;
      width: 100%;
      padding: calc(20 / 16 * 1rem);
      box-sizing: border-box;
      transition: border-bottom 0.3s;
      border-bottom: 1px solid #e8e8e8;

      &.active {
        border-color: var(--primaryLight);
        .cs-button {
          color: var(--primary);
          &:before {
            background-color: var(--primaryLight);
            transform: rotate(315deg);
          }
          &:after {
            background-color: var(--primaryLight);
            transform: rotate(-315deg);
          }
        }
        .cs-item-p {
          height: auto;
          padding-top: calc(16 / 16 * 1rem);
          opacity: 1;
        }
      }
    }

    .cs-button {
      /* 16px - 20px */
      font-size: clamp(1rem, 2vw, 1.25rem);
      line-height: 1.2em;
      text-align: left;
      font-weight: bold;
      padding: 0;
      border: none;
      background: transparent;
      color: var(--headerColor);
      display: block;
      width: 100%;
      position: relative;
      transition: background-color 0.3s, color 0.3s;

      &:hover {
        cursor: pointer;
      }

      &:before {
        /* left line */
        content: "";
        width: calc(8 / 16 * 1rem);
        height: calc(2 / 16 * 1rem);
        background-color: var(--headerColor);
        opacity: 1;
        border-radius: 50%;
        position: absolute;
        display: block;
        top: 45%;
        right: calc(4 / 16 * 1rem);
        transform: rotate(45deg);
        /* animate the transform from the left side of the x axis, and the center of the y */
        transform-origin: left center;
        transition: transform 0.5s;
      }

      &:after {
        /* right line */
        content: "";
        width: calc(8 / 16 * 1rem);
        height: calc(2 / 16 * 1rem);
        background-color: var(--headerColor);
        opacity: 1;
        border-radius: 50%;
        position: absolute;
        display: block;
        top: 45%;
        right: calc(1 / 16 * 1rem);
        transform: rotate(-45deg);
        /* animate the transform from the right side of the x axis, and the center of the y */
        transform-origin: right center;
        transition: transform 0.5s;
      }
    }

    .cs-button-text {
      width: 90%;
      display: block;
    }

    .cs-item-p {
      /* 14px - 16px */
      font-size: clamp(0.875rem, 1.5vw, 1rem);
      line-height: 1.5em;
      width: 90%;
      max-width: calc(541 / 16 * 1rem);
      height: 0;
      margin: 0;
      padding: 0;
      opacity: 0;
      color: var(--bodyTextColor);
      /* clips the text so it doesn't show up */
      overflow: hidden;
      transition: opacity 0.3s, padding-bottom 0.3s;
    }

    .cs-image-group {
      /* we use ems for everything in the container so they pull their value for em from the font size of this parent instead of the root element (html). This font size scales with the view width of the screen and stops when the font size equals the value of 1em (16px) and stops growing */
      font-size: min(2.43vw, 1em);
      width: calc(598 / 16 * 1em);
      height: calc(678 / 16 * 1em);
      display: block;
      position: relative;
    }

    .cs-picture {
      width: calc(522 / 16 * 1em);
      height: calc(609 / 16 * 1em);
      top: 0;
      left: 0;

      img {
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;
        object-fit: cover;
        border-radius: var(--borderRadius);
      }
    }
  }
}

/* Desktop - 1024px */
@media only screen and (min-width: 64rem) {
  #faq {
    .cs-container {
      max-width: calc(1280 / 16 * 1rem);
      flex-direction: row;
      justify-content: space-between;
      align-items: stretch;
    }

    .cs-content {
      width: 55%;
    }

    .cs-image-group {
      font-size: min(1.4vw, 1em);
      height: auto;
      min-height: calc(678 / 16 * 1rem);
    }

    .cs-picture {
      height: 90%;
    }
  }
}

/*-- -------------------------- -->
<---     Side By Side Only      -->
<--- -------------------------- -*/

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
  #RPsbs-2050 {
    padding-left: 0;

    .cs-content {
      /* 100px - 210px */
      padding-bottom: clamp(6.25rem, 15vw, 13.125rem);
    }

    .cs-picture {
      max-width: 100vw;
      margin-right: calc(40 / 16 * 1rem);
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
      position: absolute;
      height: 100%;
      width: 50vw;
      right: 50%;
    }

    &::before {
      content: "";
      width: 100%;
      height: 20%;
      max-height: calc(200 / 16 * 1rem);
      background-color: #1a1a1a;
      position: absolute;
      bottom: -1px;
      left: 0;
      z-index: 1;
    }
  }
}

/*-- -------------------------- -->
<---   Side By Side Reverse     -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
  #RPsbsr-2050 {
    background-color: #1a1a1a;

    .cs-title,
    .cs-text {
      color: var(--bodyTextColorWhite);
    }

    .cs-topper {
      color: var(--secondary);
    }
  }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
  #RPsbsr-2050 {
    padding-right: 0;
    padding-top: 0;

    .cs-container {
      justify-content: flex-start;
    }

    .cs-content {
      width: 45vw;
      flex: none;
    }

    .cs-picture-group {
      width: 50vw;
      height: 100%;
      margin-left: calc(40 / 16 * 1rem);
      position: absolute;
      left: 50%;
      top: 0;
    }

    .cs-picture {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }

    .cs-box {
      width: 73%;
      max-width: calc(305 / 16 * 1rem);
    }
  }
}
